{"version":3,"file":"popup.bcb143525f8a8e630efc.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAOA;AACA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAKA;AACA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA9BA;AAUA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;AC5BA","sources":["webpack://chrome-extension/./src/popup/index.jsx","webpack://chrome-extension/webpack/runtime/getFullHash"],"sourcesContent":["import React from 'react';\nimport { render } from 'react-dom';\nimport Popup from './Popup';\nimport {\n    ApolloClient,\n    InMemoryCache,\n    ApolloProvider,\n    HttpLink,\n    from,\n  } from '@apollo/client';\nimport Login from './Login';\nimport { BrowserRouter } from 'react-router-dom';\nimport { onError } from \"@apollo/client/link/error\";\n\n\n\nconst errorLink = onError(({ graphQLErrors, networkError }) => {\n  if (graphQLErrors)\n    graphQLErrors.forEach(({ message, locations, path }) =>\n      console.log(\n        `[GraphQL error]: Message: ${message}, Location: ${locations}, Path: ${path}`\n      )\n    );\n  if (networkError) console.log(`[Network error]: ${networkError}`);\n});\n\nconst httpLink = new HttpLink({ uri: 'http://localhost:3001/graphql' })\n\n  const client = new ApolloClient({\n    uri: 'http://localhost:3001/graphql',\n    cache: new InMemoryCache(),\n    connectToDevTools: true,\n    link: from([errorLink, httpLink]),\n  });\n\nrender(\n<ApolloProvider client={client}>\n  <BrowserRouter>\n  </BrowserRouter>\n\n      <Popup />\n\n\n  </ApolloProvider>\n  , window.document.querySelector('#app-container'));\n\n// if (module.hot) module.hot.accept();\n","__webpack_require__.h = () => (\"25ed7f64a105b7707c52\")"],"names":[],"sourceRoot":""}